/* Globals ======================= */

:root {
    --dark-blue: #363F5F;
    --green: #49aa26;
    --light-green: #3dd705;
    --red: #e92929;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    font-size: 93.75%; /* 15px */
}

body {
    background: #f0f2f5;
    font-family: 'Poppins', sans-serif;
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}

.container {
    width: min(90vw, 800px);
    margin: auto;
}

/* Titles ========================== */

h2 {
    margin-top: 3.2rem;
    margin-bottom: 0.8rem;
    font-weight: normal;
    color: var(--dark-blue);
    
}

/* Links & Buttons ========================== */
a {
    color: var(--green);
    text-decoration: none;
}

a:hover {
    color: var(--light-green);
}

button {
    width: 100%;
    height: 50px;

    border: none;
    color: white;

    background: var(--green);
    padding: 0;

    border-radius: 0.25rem;
    cursor: pointer;
}

button:hover {
    background: var(--light-green);
}

.button.new {
    /*Display inline-block dá ao elemento a possibilidade do margin-bottom sem que o elemento tenha um width de 100%, fazendo com que, nesse caso, o elemento não fique com o link até o final da página */

    display: inline-block;
    margin-bottom: .8rem;
}

.button.cancel {
    color: var(--red);
    border: 2px var(--red) solid;
    border-radius: 0.25rem;

    height: 50px;

    display: flex;
    align-items: center;
    justify-content: center;

    opacity: 0.6;
}

.button.cancel:hover {
    opacity: 1;
}

/* Header =========================== */

header {
    background: #2D4A22;
    padding: 2rem 0 10rem;
    text-align: center;
}

#logo {
    color: white;
    font-weight: 100;
}

/* Balance ========================= */

#balance {
    margin-top: -8rem;
}

#balance h2 {
    color: white;
    margin-top: 0;
}

/* Card ============================= */

.card {
    background: white;
    padding: 1.5rem 2rem;
    margin-bottom: 2rem;
    border-radius: 0.25rem;
    color: var(--dark-blue);
}

.card h3 {
    font-weight: normal;
    font-size: 1rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.card p {
    font-size: 2rem;
    margin-top: 1rem;
    line-height: 3rem;
}

.card.total {
    background: var(--green);
}

/* Data-table =================== */

#transaction {
    display: block; /* Display block para travar a tabela no 100%, porém ele ainda transborda a tabela. Para isso precisamos de mais uma propriedade: o overflow */
    width: 100%;
    overflow-x: auto; /* Propriedade que regula elementos que transbordam. */
}

#data-table {
    width: 100%; 
    color: #969CB3;
    border-spacing: 0 0.5rem;
}

table thead tr th:first-child,
table thead tr th:first-child {
    border-radius: 0.25rem 0 0 0.25rem;
}

table thead tr th:last-child,
table thead tr th:last-child {
    border-radius: 0 0.25rem 0.25rem 0;
}

table thead th {
    background: white;
    text-align: left;
    padding: 1rem 2rem;
    font-weight: normal;
}


table tbody td {
    background: white;
    padding: 1rem 2rem;
}

table tbody tr {
    opacity: 0.7;
}

table tbody tr:hover {
    opacity: 1;
}

td.description {
    color: var(--dark-blue);
}

td.expense {
    color: var(--red);
}

td.income {
    color: #12A454;
}

/* Modal ==================== */

.modal-overlay {
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.7);

    position: fixed;
    top: 0;

    display: flex; /* Alinhamento dos elementos um do lado do outro */
    align-items: center; /* Alinhamento no centro */
    justify-content: center; /* Elemento vai para o meio da tela, no contexto, a caixa dentro do overlay. */

    opacity: 0; /* Caixa escondida antes da ação, ou seja, o click na opção. */
    visibility: hidden;

}

.modal-overlay.active {
    /* Caixa visível quando for clicada a opção, que será adicionada com JavaScript. */
    opacity: 1;
    visibility: visible;
}

.modal {
    /* Caixa dentro do overlay, que vai receber o formulário. */
    background-color: #F0F2F5;
    padding: 2.4rem;
}

/* Footer ==================== */

#form {
    max-width: 500px;
}

#form h2 {
    margin-top: 0;
}

input {
    border: none;
    border-radius: 0.2rem;

    padding: 0.8rem;
    width: 100%;
}

.input-group {
    margin-top: 0.8rem;
}

.input-group small {
    opacity: 0.4;
}

.input-group.actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.input-group.actions .button,
.input-group.actions button {
    width: 48%;
}
/* Footer ==================== */

footer {
    text-align: center;
    padding: 4rem 0 2rem;
    opacity: 0.6;
    color: var(--dark-blue);
}

/* Responsive ==================== */

/* Regra que será aplicada quando a página for acessada por um dispositivo que tiver mais de 800px de resolução. A regra passa a ser aplicada a partir do mínimo de 800px pra cima. Menos que isso, regras gerais (mobile first) */

@media (min-width: 800px) {
    html {
        font-size: 87.5%;
    }

    #balance {
        display: grid; /* O elementos ficam alinhados um ao lado do outro no eixo X. Porém, deve-se aplicar as regras abaixo para configurar as colunas. */
        grid-template-columns: repeat(3, 1fr); /* Propriedade do grid, onde repete o tamanho das colunas, no caso, para as três, cada uma com o valor de 1 fração. Esse valor pode receber qualquer outra unidade de medida (rem, px, etc) */
        gap: 2rem; /* Espaço entre as colunas no valor de 2rem */
    }
}